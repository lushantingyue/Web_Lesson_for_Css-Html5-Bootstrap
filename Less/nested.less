/** nested 嵌套规则**/
//我们可以在一个选择器中嵌套另一个选择器来实现继承，
// 这样很大程度减少了代码量，并且代码看起来更加的清晰。
.list {
  width: 600px;
  margin: 30px auto;
  padding: 0;
  list-style: none;

  li {
    height: 30px;
    line-height: 30px;
    background-color: pink;
    margin-bottom: 5px;
    padding: 0 10px;
  }
  a {
    float: left;
    // & 代表上一层选择器
    &:hover {
      color: red;
    }
  }
  span {
    float: right;
  }

}

// @arguments 包含了所有传进来的参数, 简化了传参的写法
.border_arg(@w:2px,@c:red,@xx:solid) {
  border: @arguments;
}

.test_arguments {
  .border_arg(6px, #5ad8ff);
}

// 避免编译
// 有时候我们需要使用一些 LESS无法识别的专有语法, 为了不让LESS编译处理
// 可以在相应字符串前 加上一个 ~并引号包裹' '
.test_avoid-process {
  width: ~'calc(300px - 30px)';
}

// !important标记继承得来的属性
.test_important {
  .test_avoid-process !important;
}